{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julian.contreras\\\\Desktop\\\\Prueba React\\\\prueba-react\\\\src\\\\componentes\\\\gif.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GifComponent = () => {\n  _s();\n  const [gifUrl, setGifUrl] = useState('');\n  const [words, setWords] = useState('');\n  const apiKey = 'XrhlhNkC54XUvG0UDVbWFWVNJuddJvta'; // Tu clave de API\n\n  useEffect(() => {\n    const fetchGif = async () => {\n      try {\n        const response = await fetch('https://catfact.ninja/fact');\n        const data = await response.json();\n        const words = data.fact.split(' ').slice(0, 4);\n        const tags = words.map(word => encodeURIComponent(word));\n        const tagString = tags.join('+');\n        const gifResponse = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}&tag=${tagString}`);\n        const gifData = await gifResponse.json();\n        const gifUrl = gifData.data.images.downsized_large.url;\n        setGifUrl(gifUrl);\n        setWords(words);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchGif();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: gifUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: gifUrl,\n      alt: \"GIF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando GIF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GifComponent, \"JHWfxukA2vh01BwjdAL7MxySdFY=\");\n_c = GifComponent;\nexport default GifComponent;\nvar _c;\n$RefreshReg$(_c, \"GifComponent\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","GifComponent","_s","gifUrl","setGifUrl","words","setWords","apiKey","fetchGif","response","fetch","data","json","fact","split","slice","tags","map","word","encodeURIComponent","tagString","join","gifResponse","gifData","images","downsized_large","url","error","console","log","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/julian.contreras/Desktop/Prueba React/prueba-react/src/componentes/gif.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst GifComponent = () => {\r\n  const [gifUrl, setGifUrl] = useState('');\r\n  const [words, setWords] = useState('');\r\n  const apiKey = 'XrhlhNkC54XUvG0UDVbWFWVNJuddJvta'; // Tu clave de API\r\n\r\n  useEffect(() => {\r\n    const fetchGif = async () => {\r\n      try {\r\n        const response = await fetch('https://catfact.ninja/fact');\r\n        const data = await response.json();\r\n        const words = data.fact.split(' ').slice(0, 4);\r\n        const tags = words.map(word => encodeURIComponent(word));\r\n        const tagString = tags.join('+');\r\n        const gifResponse = await fetch(`https://api.giphy.com/v1/gifs/random?api_key=${apiKey}&tag=${tagString}`);\r\n        const gifData = await gifResponse.json();\r\n        const gifUrl = gifData.data.images.downsized_large.url;\r\n        setGifUrl(gifUrl);\r\n        setWords(words);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchGif();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {gifUrl ? (\r\n        <img src={gifUrl} alt=\"GIF\" />\r\n      ) : (\r\n        <p>Cargando GIF...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMS,MAAM,GAAG,kCAAkC,CAAC,CAAC;;EAEnDV,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMP,KAAK,GAAGM,IAAI,CAACE,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9C,MAAMC,IAAI,GAAGX,KAAK,CAACY,GAAG,CAACC,IAAI,IAAIC,kBAAkB,CAACD,IAAI,CAAC,CAAC;QACxD,MAAME,SAAS,GAAGJ,IAAI,CAACK,IAAI,CAAC,GAAG,CAAC;QAChC,MAAMC,WAAW,GAAG,MAAMZ,KAAK,CAAE,gDAA+CH,MAAO,QAAOa,SAAU,EAAC,CAAC;QAC1G,MAAMG,OAAO,GAAG,MAAMD,WAAW,CAACV,IAAI,CAAC,CAAC;QACxC,MAAMT,MAAM,GAAGoB,OAAO,CAACZ,IAAI,CAACa,MAAM,CAACC,eAAe,CAACC,GAAG;QACtDtB,SAAS,CAACD,MAAM,CAAC;QACjBG,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOsB,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDnB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAA8B,QAAA,EACG3B,MAAM,gBACLH,OAAA;MAAK+B,GAAG,EAAE5B,MAAO;MAAC6B,GAAG,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAE9BpC,OAAA;MAAA8B,QAAA,EAAG;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CAnCID,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}