{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\julian.contreras\\\\Desktop\\\\Prueba React\\\\prueba-react\\\\src\\\\componentes\\\\gif.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GiphyComponent() {\n  _s();\n  const [gifUrl, setGifUrl, endpoint] = useState('');\n  useEffect(() => {\n    const fetchGif = async () => {\n      try {\n        const tag = await getTagFromAPI();\n        const apiKey = 'XrhlhNkC54XUvG0UDVbWFWVNJuddJvta';\n        const endpoint = `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}&tag=${tag}`;\n        const response = await fetch(endpoint);\n        const data = await response.json();\n        const gif = data.data.image_original_url;\n        setGifUrl(gif);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchGif();\n  }, []);\n  const getTagFromAPI = async () => {\n    try {\n      const response = await fetch('https://catfact.ninja/fact');\n      const data = await response.json();\n      const words = data.fact.split(' ').slice(0, 4).join(' ');\n      return words;\n    } catch (error) {\n      console.log(error);\n      return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Random GIF: endpoint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), gifUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: gifUrl,\n      alt: \"Random GIF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading GIF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(GiphyComponent, \"ejTG+WdFf/VaskvFwFK+u+Orw5g=\");\n_c = GiphyComponent;\nexport default GiphyComponent;\nvar _c;\n$RefreshReg$(_c, \"GiphyComponent\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GiphyComponent","_s","gifUrl","setGifUrl","endpoint","fetchGif","tag","getTagFromAPI","apiKey","response","fetch","data","json","gif","image_original_url","error","console","log","words","fact","split","slice","join","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/julian.contreras/Desktop/Prueba React/prueba-react/src/componentes/gif.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction GiphyComponent() {\r\n  const [gifUrl, setGifUrl, endpoint] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchGif = async () => {\r\n      try {\r\n        const tag = await getTagFromAPI();\r\n        const apiKey = 'XrhlhNkC54XUvG0UDVbWFWVNJuddJvta';\r\n        const endpoint = `https://api.giphy.com/v1/gifs/random?api_key=${apiKey}&tag=${tag}`;\r\n        const response = await fetch(endpoint);\r\n        const data = await response.json();\r\n        const gif = data.data.image_original_url;\r\n        setGifUrl(gif);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchGif();\r\n  }, []);\r\n\r\n  const getTagFromAPI = async () => {\r\n    try {\r\n      const response = await fetch('https://catfact.ninja/fact');\r\n      const data = await response.json();\r\n      const words = data.fact.split(' ').slice(0, 4).join(' ');\r\n      return words;\r\n    } catch (error) {\r\n      console.log(error);\r\n      return '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Random GIF: endpoint</h1>\r\n      {gifUrl ? (\r\n        <img src={gifUrl} alt=\"Random GIF\" />\r\n      ) : (\r\n        <p>Loading GIF...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GiphyComponent;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACd,MAAMQ,QAAQ,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,aAAa,CAAC,CAAC;QACjC,MAAMC,MAAM,GAAG,kCAAkC;QACjD,MAAMJ,QAAQ,GAAI,gDAA+CI,MAAO,QAAOF,GAAI,EAAC;QACpF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACN,QAAQ,CAAC;QACtC,MAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,GAAG,GAAGF,IAAI,CAACA,IAAI,CAACG,kBAAkB;QACxCX,SAAS,CAACU,GAAG,CAAC;MAChB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDV,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMM,KAAK,GAAGP,IAAI,CAACQ,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;MACxD,OAAOJ,KAAK;IACd,CAAC,CAAC,OAAOH,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAClB,OAAO,EAAE;IACX;EACF,CAAC;EAED,oBACEhB,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAAwB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC5BzB,MAAM,gBACLH,OAAA;MAAK6B,GAAG,EAAE1B,MAAO;MAAC2B,GAAG,EAAC;IAAY;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAErC5B,OAAA;MAAAwB,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC1B,EAAA,CA3CQD,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AA6CvB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}