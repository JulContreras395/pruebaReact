{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nconst WordsComponent = _ref => {\n  _s();\n  let {\n    onWordsChange\n  } = _ref;\n  const [Words, setWords] = useState('');\n  useEffect(() => {\n    const fetchWords = async () => {\n      try {\n        const response = await fetch('https://catfact.ninja/fact');\n        const data = await response.json();\n        const words = data.fact.split(' ').slice(0, 4);\n        const tags = words.map(word => encodeURIComponent(word));\n        setWords(tags);\n        onWordsChange(words);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchWords();\n  }, [onWordsChange]);\n  return {\n    Words\n  };\n};\n_s(WordsComponent, \"kvTgOos1IHaTg8/sXttILTYzlnE=\");\n_c = WordsComponent;\nexport default WordsComponent;\nvar _c;\n$RefreshReg$(_c, \"WordsComponent\");","map":{"version":3,"names":["useEffect","useState","WordsComponent","_ref","_s","onWordsChange","Words","setWords","fetchWords","response","fetch","data","json","words","fact","split","slice","tags","map","word","encodeURIComponent","error","console","log","_c","$RefreshReg$"],"sources":["C:/Users/julian.contreras/Desktop/Prueba React/prueba-react/src/componentes/WordsComponent.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst WordsComponent = ({ onWordsChange }) => {\r\n  const [Words, setWords] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchWords = async () => {\r\n      try {\r\n        const response = await fetch('https://catfact.ninja/fact');\r\n        const data = await response.json();\r\n        const words = data.fact.split(' ').slice(0, 4);\r\n        const tags = words.map(word => encodeURIComponent(word));\r\n        setWords(tags);\r\n        onWordsChange(words);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    fetchWords();\r\n  }, [onWordsChange]);\r\n\r\n  return (\r\n        {Words}\r\n  );\r\n};\r\n\r\nexport default WordsComponent;\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,cAAc,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC;EAAc,CAAC,GAAAF,IAAA;EACvC,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,MAAMQ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;QAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,KAAK,GAAGF,IAAI,CAACG,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;QAC9C,MAAMC,IAAI,GAAGJ,KAAK,CAACK,GAAG,CAACC,IAAI,IAAIC,kBAAkB,CAACD,IAAI,CAAC,CAAC;QACxDZ,QAAQ,CAACU,IAAI,CAAC;QACdZ,aAAa,CAACQ,KAAK,CAAC;MACtB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDb,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACH,aAAa,CAAC,CAAC;EAEnB,OACM;IAACC;EAAK,CAAC;AAEf,CAAC;AAACF,EAAA,CAvBIF,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAyBpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}